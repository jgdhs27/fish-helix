#!/usr/bin/env fish

set root (dirname (status filename))
set tempdir (mktemp -d)
mkfifo "$tempdir/fifo"
set -l error false

fish "$root/tests/_run.fish" "$root/tests/_example_test.fish" "$tempdir/fifo" "$tempdir/out" 2>/dev/null
or begin
    echo "$root/test/_example_test.fish has failed, but it should have succeeded" >&2
    head -n-1 "$tempdir/out" >&2
    set error true
end


fish "$root/tests/_run.fish" "$root/tests/_broken_test.fish" "$tempdir/fifo" "$tempdir/out" 2>/dev/null
and begin
    echo "$root/test/_broken_test.fish has succeeded, but it should have failed" >&2
    head -n-1 "$tempdir/out" >&2
    set error true
end

if test "$error" = true
    exit 1
end

set passed 0
set failed 0

function do_test -a test_file
    # FIXME on `-v` echo "$test_file"
    fish "$root/tests/_run.fish" "$test_file" "$tempdir/fifo" "$tempdir/out"
    if test "$status" = 0
        set passed (math "$passed" + 1)
    else
        set failed (math "$failed" + 1)
    end
end

if test (count $argv) = 0
    find "$root/tests" -type f -name "[^_]*.fish" | while read -l -d\n filename
        do_test "$filename"
    end
else
    for filename in $argv
        do_test "$filename"
    end
end

echo (math "$passed" + "$failed") "tests finished. $failed failed." >&2
test "$failed" = 0
